Traceback (most recent call last):
  File "/home/matthias/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/lib/python3/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/lib/python3/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/lib/python3/dist-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import plotly.express as px
from dash import dcc, html, Input, Output
from jupyter_dash import JupyterDash

# Load your CSV file
df = pd.read_csv('docs/owid-covid-data.csv')

# Select relevant columns
country_code_column = 'iso_code'
gdp_per_capita_column = 'gdp_per_capita'
vaccinations_column = 'total_vaccinations_per_hundred'

# Extract relevant data
data = df[[country_code_column, gdp_per_capita_column, vaccinations_column]].copy()

# Ensure country codes are in uppercase (Plotly expects uppercase ISO codes)
data['country_code'] = data[country_code_column].str.upper()

# Drop rows where GDP per capita or vaccinations per hundred is NaN
data.dropna(subset=[gdp_per_capita_column, vaccinations_column], inplace=True)

# Define a custom color scale from light blue to deep blue
custom_color_scale = [
    [0, 'rgb(173, 216, 230)'],  # light blue
    [1, 'rgb(0, 0, 139)']       # deep blue
]

# Initialize the Dash app
app = JupyterDash(__name__)

app.layout = html.Div([
    dcc.Dropdown(
        id='metric-dropdown',
        options=[
            {'label': 'GDP per Capita', 'value': gdp_per_capita_column},
            {'label': 'Vaccinations per 100 Inhabitants', 'value': vaccinations_column}
        ],
        value=gdp_per_capita_column,
        clearable=False
    ),
    dcc.Graph(id='choropleth-map')
])

@app.callback(
    Output('choropleth-map', 'figure'),
    Input('metric-dropdown', 'value')
)
def update_choropleth(selected_metric):
    fig = px.choropleth(
        data, 
        locations='country_code', 
        color=selected_metric,
        hover_name='country_code',
        hover_data={gdp_per_capita_column: True, vaccinations_column: True},
        title=f'{selected_metric.replace("_", " ").title()} for 2021',
        labels={selected_metric: selected_metric.replace("_", " ").title()},
        color_continuous_scale=custom_color_scale,
        range_color=(0, 60000) if selected_metric == gdp_per_capita_column else (0, 100)
    )
    return fig

# Run the app in the notebook
app.run_server(mode='inline')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_68927/3469966857.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mimport[0m [0mpandas[0m [0;32mas[0m [0mpd[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0;32mimport[0m [0mplotly[0m[0;34m.[0m[0mexpress[0m [0;32mas[0m [0mpx[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 3[0;31m [0;32mfrom[0m [0mdash[0m [0;32mimport[0m [0mdcc[0m[0;34m,[0m [0mhtml[0m[0;34m,[0m [0mInput[0m[0;34m,[0m [0mOutput[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0;32mfrom[0m [0mjupyter_dash[0m [0;32mimport[0m [0mJupyterDash[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'dash'
ModuleNotFoundError: No module named 'dash'

